[2018-01-25T08:34:14.929] [DEBUG] ctest - sql connection pool ok={"server":"localhost","host":"localhost","dbname":"ctest","user":"root","password":".-0P~[!v","port":3306} rte(/) lne(connect(): lib/mysql_object.js:32:13)
[2018-01-25T08:34:14.944] [INFO] ctest - Log file has been flushed clean.
[2018-01-25T08:34:14.944] [TRACE] ctest - Entering cheese testing
[2018-01-25T08:34:14.944] [DEBUG] ctest - Got cheese.
[2018-01-25T08:34:14.944] [INFO] ctest - Cheese is Gouda.
[2018-01-25T08:34:14.945] [WARN] ctest - Cheese is quite smelly.
[2018-01-25T08:34:14.945] [ERROR] ctest - Cheese is too ripe!
[2018-01-25T08:34:14.945] [FATAL] ctest - Cheese was breeding ground for listeria.
[2018-01-25T08:34:24.954] [DEBUG] ctest - route(/get/ctest) rte(/get/ctest) reqIP(::1) act(post) lne(processRoute(): helper/server.js:70:12)
[2018-01-25T08:34:24.963] [TRACE] ctest - file loading=./lib/appenders/vars.js rte(/get/ctest) act(get) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:34:24.964] [TRACE] ctest - file loading=./lib/appenders/classes.js rte(/get/ctest) act(get) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:34:24.965] [INFO] ctest - checking class(f1o) typeof(object) rte(/get/ctest) act(get) object(classes.init) file(classes.js)
[2018-01-25T08:34:24.965] [TRACE] ctest - file loading=./lib/appenders/functions.js rte(/get/ctest) act(get) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:34:24.968] [INFO] ctest - checking function(f1o.init) rte(/get/ctest) act(get) object(functions.init) file(functions.js)
[2018-01-25T08:34:24.968] [TRACE] ctest - looking for class(f1o) rte(/get/ctest) act(get) object(promise_toolkit_factory.find_class) file(app.js)
[2018-01-25T08:34:24.969] [DEBUG] ctest - function(f1o)=(f1o) confirmed rte(/get/ctest) act(get) object(functions.init) file(functions.js)
[2018-01-25T08:34:24.970] [INFO] ctest - checking function(f1o.render_page) rte(/get/ctest) act(get) object(functions.init) file(functions.js)
[2018-01-25T08:34:24.970] [TRACE] ctest - looking for class(f1o) rte(/get/ctest) act(get) object(promise_toolkit_factory.find_class) file(app.js)
[2018-01-25T08:34:24.971] [DEBUG] ctest - function(f1o)=(f1o) confirmed rte(/get/ctest) act(get) object(functions.init) file(functions.js)
[2018-01-25T08:34:24.971] [TRACE] ctest - file loading=./lib/appenders/promises.js rte(/get/ctest) act(get) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:34:24.973] [TRACE] ctest - run() rte(/get/ctest) act(get) object(promise_toolkit_factory.run) file(app.js)
[2018-01-25T08:34:24.974] [DEBUG] ctest - run these flows conf({"flows":[1]}) rte(/get/ctest) act(get) object(promises.run) file(promises.js)
[2018-01-25T08:34:25.077] [DEBUG] ctest - process jo={"flow":1} rte(/get/ctest) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:34:25.079] [DEBUG] ctest - process flow=1 rte(/get/ctest) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:34:25.079] [TRACE] ctest - run() rte(/get/ctest) act(get) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:34:25.186] [DEBUG] ctest - process_function flow(1) jo({"flow":1,"funcName":"f1o.init","funcANum":0}) rte(/get/ctest) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:34:25.186] [TRACE] ctest - run() rte(/get/ctest) act(get) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:34:25.187] [DEBUG] ctest - debug 10.00 rte(/get/ctest) act(get) object(carosh_test.init) file(carosh_test.js)
[2018-01-25T08:34:25.188] [DEBUG] ctest - process_function flow(1) jo({"flow":1,"funcName":"f1o.render_page","funcANum":1}) rte(/get/ctest) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:34:25.189] [TRACE] ctest - run() rte(/get/ctest) act(get) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:34:25.189] [TRACE] ctest - run() rte(/get/ctest) act(get) object(promise_toolkit_factory.getVars) file(app.js)
[2018-01-25T08:34:25.189] [DEBUG] ctest - debug 10.00 rte(/get/ctest) act(get) object(carosh_test.render_page) file(carosh_test.js)
[2018-01-25T08:34:25.231] [DEBUG] ctest - values=["success flow(1)","success flow(1)"] rte(/get/ctest) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:34:34.996] [DEBUG] ctest - route(/post/user) rte(/post/user) reqIP(::1) act(post) lne(processRoute(): helper/server.js:70:12)
[2018-01-25T08:34:35.000] [TRACE] ctest - file loading=./lib/appenders/vars.js rte(/post/user) act(post) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:34:35.001] [TRACE] ctest - file loading=./lib/appenders/classes.js rte(/post/user) act(post) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:34:35.001] [INFO] ctest - checking class(f1o) typeof(object) rte(/post/user) act(post) object(classes.init) file(classes.js)
[2018-01-25T08:34:35.001] [TRACE] ctest - file loading=./lib/appenders/functions.js rte(/post/user) act(post) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:34:35.001] [INFO] ctest - checking function(f1o.init) rte(/post/user) act(post) object(functions.init) file(functions.js)
[2018-01-25T08:34:35.002] [TRACE] ctest - looking for class(f1o) rte(/post/user) act(post) object(promise_toolkit_factory.find_class) file(app.js)
[2018-01-25T08:34:35.002] [DEBUG] ctest - function(f1o)=(f1o) confirmed rte(/post/user) act(post) object(functions.init) file(functions.js)
[2018-01-25T08:34:35.002] [INFO] ctest - checking function(f1o.insert_user) rte(/post/user) act(post) object(functions.init) file(functions.js)
[2018-01-25T08:34:35.002] [TRACE] ctest - looking for class(f1o) rte(/post/user) act(post) object(promise_toolkit_factory.find_class) file(app.js)
[2018-01-25T08:34:35.003] [DEBUG] ctest - function(f1o)=(f1o) confirmed rte(/post/user) act(post) object(functions.init) file(functions.js)
[2018-01-25T08:34:35.003] [TRACE] ctest - file loading=./lib/appenders/promises.js rte(/post/user) act(post) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:34:35.003] [TRACE] ctest - run() rte(/post/user) act(post) object(promise_toolkit_factory.run) file(app.js)
[2018-01-25T08:34:35.003] [DEBUG] ctest - run these flows conf({"flows":[1]}) rte(/post/user) act(post) object(promises.run) file(promises.js)
[2018-01-25T08:34:35.103] [DEBUG] ctest - process jo={"flow":1} rte(/post/user) act(post) object(promises.process) file(promises.js)
[2018-01-25T08:34:35.104] [DEBUG] ctest - process flow=1 rte(/post/user) act(post) object(promises.process) file(promises.js)
[2018-01-25T08:34:35.104] [TRACE] ctest - run() rte(/post/user) act(post) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:34:35.205] [DEBUG] ctest - process_function flow(1) jo({"flow":1,"funcName":"f1o.init","funcANum":0}) rte(/post/user) act(post) object(promises.process) file(promises.js)
[2018-01-25T08:34:35.206] [TRACE] ctest - run() rte(/post/user) act(post) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:34:35.206] [DEBUG] ctest - debug 10.00 rte(/post/user) act(post) object(carosh_test.init) file(carosh_test.js)
[2018-01-25T08:34:35.207] [DEBUG] ctest - process_function flow(1) jo({"flow":1,"funcName":"f1o.insert_user","funcANum":1}) rte(/post/user) act(post) object(promises.process) file(promises.js)
[2018-01-25T08:34:35.207] [TRACE] ctest - run() rte(/post/user) act(post) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:34:35.209] [TRACE] ctest - run() rte(/post/user) act(post) object(promise_toolkit_factory.getVars) file(app.js)
[2018-01-25T08:34:35.210] [DEBUG] ctest - debug 20.00 dump={"first":"sam","last":"two"} rte(/post/user) act(post) object(carosh_test.insert_user) file(carosh_test.js)
[2018-01-25T08:34:35.211] [DEBUG] ctest - sql=INSERT INTO ctest.users(first, last) values("sam","two") rte(/post/user) lne(query(): lib/mysql_object.js:40:13)
[2018-01-25T08:34:35.236] [DEBUG] ctest - values=["success flow(1)","success flow(1)"] rte(/post/user) act(post) object(promises.process) file(promises.js)
[2018-01-25T08:34:35.308] [DEBUG] ctest - sql=SELECT MAX(id) AS mx FROM ctest.users rte(/post/user) lne(query(): lib/mysql_object.js:40:13)
[2018-01-25T08:34:35.317] [DEBUG] ctest - sql=INSERT INTO ctest.user_to_role(user_id, role_id) values("19","1") rte(/post/user) lne(query(): lib/mysql_object.js:40:13)
[2018-01-25T08:34:35.321] [DEBUG] ctest - sql=SELECT * FROM ctest.users rte(/post/user) lne(query(): lib/mysql_object.js:40:13)
[2018-01-25T08:38:59.696] [DEBUG] ctest - route(/get/minimum) rte(/get/minimum) reqIP(::1) act(post) lne(processRoute(): helper/server.js:70:12)
[2018-01-25T08:38:59.701] [TRACE] ctest - file loading=./lib/appenders/vars.js rte(/get/minimum) act(get) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:38:59.701] [TRACE] ctest - file loading=./lib/appenders/classes.js rte(/get/minimum) act(get) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:38:59.701] [INFO] ctest - checking class(f1o) typeof(object) rte(/get/minimum) act(get) object(classes.init) file(classes.js)
[2018-01-25T08:38:59.702] [TRACE] ctest - file loading=./lib/appenders/functions.js rte(/get/minimum) act(get) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:38:59.702] [INFO] ctest - checking function(f1o.init) rte(/get/minimum) act(get) object(functions.init) file(functions.js)
[2018-01-25T08:38:59.702] [TRACE] ctest - looking for class(f1o) rte(/get/minimum) act(get) object(promise_toolkit_factory.find_class) file(app.js)
[2018-01-25T08:38:59.702] [DEBUG] ctest - function(f1o)=(f1o) confirmed rte(/get/minimum) act(get) object(functions.init) file(functions.js)
[2018-01-25T08:38:59.703] [INFO] ctest - checking function(f1o.minimum) rte(/get/minimum) act(get) object(functions.init) file(functions.js)
[2018-01-25T08:38:59.703] [TRACE] ctest - looking for class(f1o) rte(/get/minimum) act(get) object(promise_toolkit_factory.find_class) file(app.js)
[2018-01-25T08:38:59.703] [DEBUG] ctest - function(f1o)=(f1o) confirmed rte(/get/minimum) act(get) object(functions.init) file(functions.js)
[2018-01-25T08:38:59.703] [TRACE] ctest - file loading=./lib/appenders/promises.js rte(/get/minimum) act(get) object(promise_toolkit_factory.appender) file(app.js)
[2018-01-25T08:38:59.703] [TRACE] ctest - run() rte(/get/minimum) act(get) object(promise_toolkit_factory.run) file(app.js)
[2018-01-25T08:38:59.704] [DEBUG] ctest - run these flows conf({"flows":[1]}) rte(/get/minimum) act(get) object(promises.run) file(promises.js)
[2018-01-25T08:38:59.804] [DEBUG] ctest - process jo={"flow":1} rte(/get/minimum) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:38:59.805] [DEBUG] ctest - process flow=1 rte(/get/minimum) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:38:59.805] [TRACE] ctest - run() rte(/get/minimum) act(get) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:38:59.906] [DEBUG] ctest - process_function flow(1) jo({"flow":1,"funcName":"f1o.init","funcANum":0}) rte(/get/minimum) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:38:59.907] [TRACE] ctest - run() rte(/get/minimum) act(get) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:38:59.907] [DEBUG] ctest - debug 10.00 rte(/get/minimum) act(get) object(carosh_test.init) file(carosh_test.js)
[2018-01-25T08:38:59.907] [DEBUG] ctest - process_function flow(1) jo({"flow":1,"funcName":"f1o.minimum","funcANum":1}) rte(/get/minimum) act(get) object(promises.process) file(promises.js)
[2018-01-25T08:38:59.908] [TRACE] ctest - run() rte(/get/minimum) act(get) object(promise_toolkit_factory.getFlowAppender) file(app.js)
[2018-01-25T08:38:59.909] [TRACE] ctest - run() rte(/get/minimum) act(get) object(promise_toolkit_factory.getVars) file(app.js)
[2018-01-25T08:38:59.909] [DEBUG] ctest - debug 40.00 rte(/get/minimum) act(get) object(carosh_test.minimum) file(carosh_test.js)
[2018-01-25T08:38:59.909] [DEBUG] ctest - sql=SELECT sb.count, sb.role_name FROM ( SELECT COUNT(DISTINCT(ru.user_id)) AS count, (SELECT rl.role_name FROM ctest.roles AS rl WHERE rl.id = ru.role_id) AS role_name FROM ctest.user_to_role AS ru WHERE ru.role_id > 0 GROUP BY ru.role_id ) AS sb WHERE sb.count >= 5  rte(/get/minimum) lne(query(): lib/mysql_object.js:40:13)
[2018-01-25T08:38:59.913] [DEBUG] ctest - values=["success flow(1)","success flow(1)"] rte(/get/minimum) act(get) object(promises.process) file(promises.js)
